-- Roblox Lua Script for "The Intruder - Mental Hospital" Map (By BMF)
-- Script handles a draggable UI with multiple functionalities

-- Variables
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local StarterGui = game:GetService("StarterGui")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Create UI Elements
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local LocationLabel1 = Instance.new("TextLabel")
local LocationLabel2 = Instance.new("TextLabel")
local ErrorLog = Instance.new("TextLabel")
local UIListLayout = Instance.new("UIListLayout")

-- UI Properties
ScreenGui.Parent = PlayerGui
ScreenGui.ResetOnSpawn = false
ScreenGui.Name = "IntruderHospitalUI"

MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Size = UDim2.new(0, 300, 0, 450)
MainFrame.Position = UDim2.new(0.5, 301, 0.5, -549) -- Updated position
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = true

Title.Parent = MainFrame
Title.Text = "The Intruder - Mental Hospital (By BMF)"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18

LocationLabel1.Parent = MainFrame
LocationLabel1.Text = "Intruder 1 Location: Loading..."
LocationLabel1.Size = UDim2.new(1, 0, 0, 30)
LocationLabel1.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
LocationLabel1.TextColor3 = Color3.fromRGB(255, 255, 255)
LocationLabel1.Font = Enum.Font.SourceSans
LocationLabel1.TextSize = 16

LocationLabel2.Parent = MainFrame
LocationLabel2.Text = "Intruder 2 Location: Loading..."
LocationLabel2.Size = UDim2.new(1, 0, 0, 30)
LocationLabel2.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
LocationLabel2.TextColor3 = Color3.fromRGB(255, 255, 255)
LocationLabel2.Font = Enum.Font.SourceSans
LocationLabel2.TextSize = 16

ErrorLog.Parent = MainFrame
ErrorLog.Text = "Error Log: None"
ErrorLog.Size = UDim2.new(1, 0, 0, 30)
ErrorLog.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ErrorLog.TextColor3 = Color3.fromRGB(255, 85, 85)
ErrorLog.Font = Enum.Font.SourceSans
ErrorLog.TextSize = 14
ErrorLog.TextWrapped = true
ErrorLog.TextYAlignment = Enum.TextYAlignment.Top

UIListLayout.Parent = MainFrame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Toggle UI with Delete key
UIS.InputBegan:Connect(function(input, processed)
	if not processed and input.KeyCode == Enum.KeyCode.Delete then
		MainFrame.Visible = not MainFrame.Visible
	end
end)

-- Function to Create Buttons
local function createButton(name, callback)
	local Button = Instance.new("TextButton")
	Button.Parent = MainFrame
	Button.Text = name
	Button.Size = UDim2.new(1, 0, 0, 30)
	Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.Font = Enum.Font.SourceSans
	Button.TextSize = 16
	Button.MouseButton1Click:Connect(function()
		pcall(callback)
	end)
	return Button
end

-- Track Intruder Locations
spawn(function()
	while true do
		local success1, result1 = pcall(function()
			return workspace.Values.intruderPos1.Value
		end)
		local success2, result2 = pcall(function()
			return workspace.Values.intruderPos2.Value
		end)

		if success1 then
			LocationLabel1.Text = "Intruder 1 Location: " .. tostring(result1)
		else
			LocationLabel1.Text = "Intruder 1 Location: Error"
			ErrorLog.Text = "Error Log: Failed to fetch intruderPos1"
		end

		if success2 then
			LocationLabel2.Text = "Intruder 2 Location: " .. tostring(result2)
		else
			LocationLabel2.Text = "Intruder 2 Location: Error"
			ErrorLog.Text = "Error Log: Failed to fetch intruderPos2"
		end

		wait(1)
	end
end)

---------------------------------------------------------------------
-- BUTTONS
---------------------------------------------------------------------

-- Infinite Yield
createButton("Infinite Yield", function()
	local success, result = pcall(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
	end)
	if success then
		print("Infinite Yield executed!")
	else
		print("Error executing Infinite Yield:", result)
	end
end)

-- Dark Dex
createButton("Dark Dex", function()
	local success, result = pcall(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
	end)
	if success then
		print("Dark Dex executed!")
	else
		print("Error executing Dark Dex:", result)
	end
end)

-- Teleport Helper
local function teleportTo(pos)
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local hrp = character:FindFirstChild("HumanoidRootPart")
	if hrp then
		hrp.CFrame = CFrame.new(pos)
	end
end

-- Teleport Buttons
createButton("Teleport to Elevator", function()
	teleportTo(Vector3.new(97, 4, -105))
	print("Teleported to Elevator!")
end)

createButton("Teleport to Employee-Only Room", function()
	teleportTo(Vector3.new(178, 4, -94))
	print("Teleported to Employee-Only Room!")
end)

createButton("Teleport to Office", function()
	teleportTo(Vector3.new(178, 4, -69))
	print("Teleported to the Office!")
end)

-- Function to teleport player to all keys with highlight enabled and visible
local function teleportToKeys(keyFolder)
    local player = Players.LocalPlayer
    local character = player.Character

    if not character or not character:FindFirstChild("HumanoidRootPart") then
        warn("Character or HumanoidRootPart not found!")
        return
    end

    if not keyFolder then
        warn("Key folder not found!")
        return
    end

    local teleportedCount = 0
    for _, key in pairs(keyFolder:GetChildren()) do
        if key.Name == "Key" then
            local highlight = key:FindFirstChild("Highlight")
            if highlight and highlight.Enabled and key.Transparency == 0 then
                -- Teleport player to key
                character.HumanoidRootPart.CFrame = key.CFrame + Vector3.new(0, 3, 0) -- slight offset above key
                teleportedCount = teleportedCount + 1
                print("Teleported to key:", key:GetFullName())
                break -- stop after first key, remove if you want to teleport to all keys in succession
            end
        end
    end

    if teleportedCount == 0 then
        print("No visible highlighted keys found in folder:", keyFolder:GetFullName())
    else
        print("Total teleports performed:", teleportedCount)
    end
end

-- Collect Silver Key
createButton("Collect Silver Key", function()
    local keyFolder = workspace:FindFirstChild("CellRoom") and workspace.CellRoom:FindFirstChild("Keys")
    teleportToKeys(keyFolder)
end)

-- Collect Gold Key
createButton("Collect Gold Key", function()
    local keyFolder = workspace:FindFirstChild("CellRoom") and workspace.CellRoom:FindFirstChild("Keys2")
    teleportToKeys(keyFolder)
end)


-- Full Bright
createButton("Full Bright", function()
	Lighting.Brightness = 5
	Lighting.ClockTime = 14
	Lighting.FogEnd = 100000
	Lighting.GlobalShadows = false
	Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
	print("Full Bright activated!")
end)

-- Shift to Run
createButton("Shift to Run", function()
	print("Shift to Run activated!")

	local Players = game:GetService("Players")
	local UIS = game:GetService("UserInputService")
	local LocalPlayer = Players.LocalPlayer
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")

	local normalSpeed = 8  -- Normal walking speed
	local runSpeed = 16    -- Speed when holding Shift

	-- Keep track of whether Shift is held
	local shiftHeld = false

	-- Detect key press
	UIS.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.KeyCode == Enum.KeyCode.LeftShift then
			shiftHeld = true
			humanoid.WalkSpeed = runSpeed
		end
	end)

	-- Detect key release
	UIS.InputEnded:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.KeyCode == Enum.KeyCode.LeftShift then
			shiftHeld = false
			humanoid.WalkSpeed = normalSpeed
		end
	end)

	print("Shift to Run is ready! Hold Shift to run.")
end)

createButton("Intruder Ignores You", function()
    print("Activating Intruder Ignores You...")

    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    -- Dynamically find the player's folder in workspace using their username
    local playerFolder = workspace:FindFirstChild(LocalPlayer.Name)

    -- Paths to destroy
    local pathsToDestroy = {
        workspace:FindFirstChild("ShameTeleport"),
        playerFolder and playerFolder:FindFirstChild("Health"),
        playerFolder and playerFolder:FindFirstChild("isDead"),
        LocalPlayer:FindFirstChild("Backpack") and LocalPlayer.Backpack:FindFirstChild("DeathShake"),
        game:GetService("StarterPack"):FindFirstChild("DeathShake"),
        LocalPlayer:FindFirstChild("PlayerGui") and LocalPlayer.PlayerGui:FindFirstChild("Death"),
        game:GetService("StarterGui"):FindFirstChild("Death")
    }

    for _, obj in ipairs(pathsToDestroy) do
        if obj then
            obj:Destroy()
        end
    end

    -- Set canExecute to false if it exists
    local values = workspace:FindFirstChild("Values")
    if values and values:FindFirstChild("canExecute") then
        values.canExecute.Value = false
    end

    print("Intruder Ignores You activated! Specified scripts removed and canExecute set to false.")
end)

-- Break Anxiety (WIP)
createButton("Break Anxiety", function()
	print("Break Anxiety is being worked on!")
end)

-- Win Game (WIP)
createButton("Win Game (WIP)", function()
	print("Win Game function is being worked on!")
end)

-- Make Easy Mode
createButton("Make Easy Mode", function()
	print("Activating Easy Mode...")

	local values = workspace:FindFirstChild("Values")
	if values then
		if values:FindFirstChild("isEasyMode") then
			values.isEasyMode.Value = true
		end
		if values:FindFirstChild("isNightmareMode") then
			values.isNightmareMode.Value = false
		end
	end

	print("Easy Mode is now active!")
end)

-- Make Nightmare Mode
createButton("Make Nightmare Mode", function()
	print("Activating Nightmare Mode...")

	local values = workspace:FindFirstChild("Values")
	if values then
		if values:FindFirstChild("isNightmareMode") then
			values.isNightmareMode.Value = true
		end
		if values:FindFirstChild("isEasyMode") then
			values.isEasyMode.Value = false
		end
	end

	print("Nightmare Mode is now active!")
end)

---------------------------------------------------------------------

print("The Intruder - Mental Hospital Script Loaded Successfully")
